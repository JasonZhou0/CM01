Import('env')
import os

SourcePath = os.getcwd()[len(env['WorkSpace']):]+'\\'
TargetBasePath  = env['ObjPath']+SourcePath
File = {}
def CheckFile(BasePath,SourcePath):
   return {BasePath+SourcePath[:-2]:SourcePath}
   
# ************BOOT_objects************
if env['TargetName'] == 'bootloader':
   File.update(CheckFile(TargetBasePath,'Libraries\\CMSIS\\Device\\ST\\STM32F4xx\\Source\\Templates\\gcc_ride7\\startup_stm32f4xx.s'))
   File.update(CheckFile(TargetBasePath,'Libraries\\CMSIS\\Device\\ST\\STM32F4xx\\Source\\Templates\\system_stm32f4xx.c'))
   File.update(CheckFile(TargetBasePath,'config\\mcu_family\\mcu_family.c'))
   File.update(CheckFile(TargetBasePath,'mcu.c'))
   for file_name in Glob('Libraries\\STM32F4xx_StdPeriph_Driver\\src\\*.c'):
      File.update(CheckFile(TargetBasePath, '%s'%file_name))

# ************APP_objects************
elif env['TargetName'] == 'application':
   File.update(CheckFile(TargetBasePath,'Libraries\\CMSIS\\Device\\ST\\STM32F4xx\\Source\\Templates\\gcc_ride7\\startup_stm32f4xx.s'))
   File.update(CheckFile(TargetBasePath,'Libraries\\CMSIS\\Device\\ST\\STM32F4xx\\Source\\Templates\\system_stm32f4xx.c'))
   File.update(CheckFile(TargetBasePath,'config\\mcu_family\\mcu_family.c'))
   File.update(CheckFile(TargetBasePath,'mcu.c'))
   for file_name in Glob('Libraries\\STM32F4xx_StdPeriph_Driver\\src\\*.c'):
      File.update(CheckFile(TargetBasePath, '%s'%file_name))
   
# ************OutPut************
objects = []
for key,value in File.items():
   objects += env.Object(target = key, source = value)

Return('objects')

